/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */options{  JDK_VERSION = "1.5";  static = false;}PARSER_BEGIN(EG1)package main;import java.io.FileReader;import java.io.FileNotFoundException;public class EG1{  public static void main(String args []) throws ParseException, FileNotFoundException  {    EG1 parser = new EG1(new FileReader("sample.txt"));    try    {      System.out.println(parser.start());    }    catch (Exception e)    {      System.out.println("NOK.");      System.out.println(e.getMessage());      //      EG1.ReInit(System.in);    }    catch (Error e)    {      System.out.println("Oops.");      System.out.println(e.getMessage());    }  }}PARSER_END(EG1)SKIP :{  "\r"| "\n"}TOKEN :{  < SUBO : "<sub>" >| < SUBC : "</sub>" >| < BOLD : "**" >| < ITALIC : "//" >
| < UNDERSCORE : "__" >}TOKEN :{  < #SINGLE_ASTERISK : ("*")    {      1    }    >
  | < SPECIAL_TOKENS : < SINGLE_ASTERISK > >
}
// TOKEN :{  < TEXT : < WORD > (< SPECIAL_TOKENS > < WORD >)* >| < WORD :    (      < LETTER >    | < DIGIT >    | < WHITESPACE >
    | < SPECIAL_CHARS >    )+ >| < #DIGIT : [ "0"-"9" ] >| < #LETTER : [ "a"-"z", "A"-"Z" ] >| < #WHITESPACE : [ " ", "\t" ] >
| < #SPECIAL_CHARS : [ "%" ] | "^" >}String start() :{  String s;  String out = "";  Token t;}{  (    s = formatted()    {      out += s;    }  | t = < TEXT >    {      out += "\"" + t.image + "\" ";    }  )+  < EOF >  {    return "\n\nOUT=[" + out + "]";  }}String formatted() :{  Token t;  String s;  String out = "";}{  (    s = sub()    {      out += s;    }  | s = bold()    {      out += s;    }
  | s = underscored()
  	{
  	  out += s;  	}   )+  {    return out;  }}//String tagged() ://{//  String s;//  String out = "";//}//{//  (//    s = sub()//    {//      out += s;//    }//  | s = bold()//    {//      out += s;//    }//  )+//  {//    return out;//  }//}String sub() :{  Token t = null;  String s = null;  String out = "";}{  < SUBO >  (    t = < TEXT >    {      out += "\"" + t.image + "\" ";    }  | s = formatted()    {      out += s;    }  )+  < SUBC >  {    return "SUB(" + out + ") ";  }}String bold() :{  Token t = null;  String s = null;}{  < BOLD >  (    t = < TEXT >  | s = sub() // tu ida wszystkie tagi z wyj. bold
  | s = underscored()  )+  < BOLD >  {    return "BOLD(\"" + ((t != null) ? t.image : s) + "\") ";  }}

String underscored() :{  Token t = null;  String s = null;}{  < UNDERSCORE >  (    t = < TEXT >  | s = sub() // tu ida wszystkie tagi z wyj. underscore
  | s = bold()  )+  < UNDERSCORE >  {    return "UNDERSCORE(\"" + ((t != null) ? t.image : s) + "\") ";  }}